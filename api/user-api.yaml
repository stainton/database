openapi: 3.1.0
info:
  title: database
  description: ''
  version: 1.0.0
tags:
  - name: user
paths:
  /user:
    post:
      summary: Add an user
      deprecated: false
      description: add an user
      operationId: add-an-user
      tags:
        - user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: &ref_0
                $ref: '#/components/schemas/ResponseTemplate'
              examples:
                '1':
                  summary: Success
                  value:
                    code: 200
                    message: success.
          headers: {}
        '400':
          description: ''
          content:
            application/json:
              schema: *ref_0
              examples:
                '1':
                  summary: Exception
                  value:
                    code: 400
                    message: User already exist.
          headers: {}
        '500':
          description: ''
          content:
            application/json:
              schema: *ref_0
              examples:
                '1':
                  summary: Exception
                  value:
                    code: 92
                    message: Server unavailable.
          headers: {}
      security: []
    get:
      summary: Get an user
      deprecated: false
      description: get an user
      operationId: get an user
      tags:
        - user
      parameters:
        - name: username
          in: query
          description: ''
          required: false
          example: username
          schema:
            type: string
        - name: userid
          in: query
          description: ''
          required: false
          example: userid
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: *ref_0
          headers: {}
      security: []
  /createTableUsers:
    post:
      summary: Initial a table in database
      deprecated: false
      description: Initial a table in database
      operationId: inital-table
      tags:
        - user
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema: *ref_0
          headers: {}
      security: []
components:
  schemas:
    User:
      type: object
      properties:
        userid:
          type:
            - integer
            - 'null'
        username:
          type:
            - string
            - 'null'
        password:
          type:
            - string
            - 'null'
        role:
          type:
            - string
            - 'null'
          enum:
            - admin
            - viewer
      required:
        - username
        - role
    ResponseWithUser:
      type: object
      properties:
        userid:
          type:
            - integer
            - 'null'
        username:
          type:
            - string
            - 'null'
        role:
          type:
            - string
            - 'null'
          enum:
            - admin
            - viewer
      required:
        - userid
        - username
        - role
    ResponseTemplate:
      type: object
      properties:
        code:
          type:
            - integer
            - 'null'
        message:
          type:
            - string
            - 'null'
      required:
        - code
        - message
  securitySchemes: {}
servers: []
security: {}
